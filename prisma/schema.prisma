generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Form {
  id                  Int                   @id @default(autoincrement())
  fullName            String
  email               String                @unique
  age                 Int                   @default(0)
  phoneNumber         Int                   @unique
  imageUrl            String
  photoTitle          String?               @default("nill")
  comment             String?               @default("nill")
  photoLocation       String
  photoPurpose        String?               @default("nill")
  AttachmetnsMetaData AttachmetnsMetaData[]
}

model AttachmetnsMetaData {
  id            Int      @id @default(autoincrement())
  fileId        Int      @unique
  Form          Form     @relation(fields: [requestEmail], references: [email])
  requestEmail  String
  fileType      String
  size          Int
  creation_date DateTime
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String  @unique
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int?
  user                     User?   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}
